{
  "hash": "d8d33a35719b0b21532783291be13bfb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"blabla\"\noutput:\n   flexdashboard::flex_dashboard:\n   orientation: rows\n   social: menu\n   source_code: embed\n   theme: cerulean\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(plotly)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCarregando pacotes exigidos: ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'ggplot2' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAnexando pacote: 'plotly'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:ggplot2':\n\n    last_plot\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:stats':\n\n    filter\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nO seguinte objeto é mascarado por 'package:graphics':\n\n    layout\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(crosstalk)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: pacote 'purrr' foi compilado no R versão 4.4.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks plotly::filter(), stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf1 <- structure(list(owner = structure(c(1L, 2L, 2L, 2L, 2L), .Label = c(\"John\", \"Mark\"), class = \"factor\"), hp = c(250, 120, 250, 100, 110), car = structure(c(2L, 2L, 2L, 1L, 1L), .Label = c(\"benz\", \"bmw\"), class = \"factor\"), id = structure(1:5, .Label = c(\"car1\", \"car2\", \"car3\", \"car4\", \"car5\"), class = \"factor\")), .Names = c(\"owner\", \"hp\", \"car\", \"id\"), row.names = c(NA, -5L), class = \"data.frame\")\n\ndf2 <- structure(list(car = structure(c(1L, 2L, 1L, 2L), .Label = c(\"benz\", \n\"bmw\"), class = \"factor\"), owner = structure(c(1L, 1L, 2L, 2L\n), .Label = c(\"John\", \"Mark\"), class = \"factor\"), freq = c(0L, \n1L, 2L, 2L)), .Names = c(\"car\", \"owner\", \"freq\"), row.names = c(NA, \n-4L), class = \"data.frame\")\n```\n:::\n\n\n#\n\n##\n\n### Filters\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(crosstalk)\n# Notice the 'group = ' argument - this does the trick!\nshared_df1 <- SharedData$new(df1, ~owner, group = \"Choose owner\")\nshared_df2 <- SharedData$new(df2, ~owner, group = \"Choose owner\")\n\nfilter_select(\"owner\", \"Car owner:\", shared_df1, ~owner)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"owner\" class=\"form-group crosstalk-input-select crosstalk-input\">\n<label class=\"control-label\" for=\"owner\">Car owner:</label>\n<div>\n<select multiple></select>\n<script type=\"application/json\" data-for=\"owner\">{\n  \"items\": {\n    \"value\": [\"John\", \"Mark\"],\n    \"label\": [\"John\", \"Mark\"]\n  },\n  \"map\": {\n    \"John\": [\"John\"],\n    \"Mark\": [\"Mark\", \"Mark\", \"Mark\", \"Mark\"]\n  },\n  \"group\": [\"Choose owner\"]\n}</script>\n</div>\n</div>\n```\n\n:::\n\n```{.r .cell-code}\n# You don't need this second filter now\n# filter_select(\"owner\", \"Car owner:\", shared_df2, ~ owner)\n```\n:::\n\n\n### Plot1 with plotly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_ly(shared_df1, x = ~id, y = ~hp, color = ~owner) %>% add_markers() %>% highlight(\"plotly_click\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nSetting the `off` event (i.e., 'plotly_doubleclick') to match the `on` event (i.e., 'plotly_click'). You can change this default via the `highlight()` function.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-bab9a9c844477e0292e5\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-bab9a9c844477e0292e5\">{\"x\":{\"visdat\":{\"74dc7f20a88\":[\"function () \",\"plotlyVisDat\"]},\"cur_data\":\"74dc7f20a88\",\"attrs\":{\"74dc7f20a88\":{\"x\":{},\"y\":{},\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"scatter\",\"mode\":\"markers\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"id\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"car1\",\"car2\",\"car3\",\"car4\",\"car5\"]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"hp\"},\"dragmode\":\"zoom\",\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"highlight\":{\"on\":\"plotly_click\",\"off\":\"plotly_doubleclick\",\"persistent\":false,\"dynamic\":false,\"color\":null,\"selectize\":false,\"defaultValues\":null,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0,\"ctGroups\":[\"Choose owner\"]},\"data\":[{\"x\":[\"car1\"],\"y\":[250],\"type\":\"scatter\",\"mode\":\"markers\",\"key\":[\"John\"],\"set\":\"Choose owner\",\"name\":\"John\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"line\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"_isSimpleKey\":true,\"_isNestedKey\":false,\"frame\":null},{\"x\":[\"car2\",\"car3\",\"car4\",\"car5\"],\"y\":[120,250,100,110],\"type\":\"scatter\",\"mode\":\"markers\",\"key\":[\"Mark\"],\"set\":\"Choose owner\",\"name\":\"Mark\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"line\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"_isSimpleKey\":true,\"_isNestedKey\":false,\"frame\":null}],\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### Plots with plotly\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_ly(shared_df2, x = ~owner, y = ~freq, color = ~car) %>% group_by(owner) %>% add_bars()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\nWarning in RColorBrewer::brewer.pal(N, \"Set2\"): minimal value for n is 3, returning requested palette with 3 different levels\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"plotly html-widget html-fill-item\" id=\"htmlwidget-f6ddc3582abd3a8b23ab\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-f6ddc3582abd3a8b23ab\">{\"x\":{\"visdat\":{\"74dc2841fc0\":[\"function () \",\"plotlyVisDat\"],\"74dc47e44223\":[\"function () \",\"data\"]},\"cur_data\":\"74dc47e44223\",\"attrs\":{\"74dc47e44223\":{\"x\":{},\"y\":{},\"color\":{},\"alpha_stroke\":1,\"sizes\":[10,100],\"spans\":[1,20],\"type\":\"bar\",\"inherit\":true}},\"layout\":{\"margin\":{\"b\":40,\"l\":60,\"t\":25,\"r\":10},\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"owner\",\"type\":\"category\",\"categoryorder\":\"array\",\"categoryarray\":[\"John\",\"Mark\"]},\"yaxis\":{\"domain\":[0,1],\"automargin\":true,\"title\":\"freq\"},\"dragmode\":\"zoom\",\"hovermode\":\"closest\",\"showlegend\":true},\"source\":\"A\",\"config\":{\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"data\":[{\"x\":[\"John\",\"Mark\"],\"y\":[0,2],\"type\":\"bar\",\"key\":[\"John\",\"Mark\"],\"set\":\"Choose owner\",\"name\":\"benz\",\"marker\":{\"color\":\"rgba(102,194,165,1)\",\"line\":{\"color\":\"rgba(102,194,165,1)\"}},\"textfont\":{\"color\":\"rgba(102,194,165,1)\"},\"error_y\":{\"color\":\"rgba(102,194,165,1)\"},\"error_x\":{\"color\":\"rgba(102,194,165,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"_isNestedKey\":false,\"frame\":null},{\"x\":[\"John\",\"Mark\"],\"y\":[1,2],\"type\":\"bar\",\"key\":[\"John\",\"Mark\"],\"set\":\"Choose owner\",\"name\":\"bmw\",\"marker\":{\"color\":\"rgba(141,160,203,1)\",\"line\":{\"color\":\"rgba(141,160,203,1)\"}},\"textfont\":{\"color\":\"rgba(141,160,203,1)\"},\"error_y\":{\"color\":\"rgba(141,160,203,1)\"},\"error_x\":{\"color\":\"rgba(141,160,203,1)\"},\"xaxis\":\"x\",\"yaxis\":\"y\",\"_isNestedKey\":false,\"frame\":null}],\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.20000000000000001,\"selected\":{\"opacity\":1},\"debounce\":0,\"ctGroups\":[\"Choose owner\"]},\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n##\n\n### Dataframe 1\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDT::datatable(shared_df1)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-7201aa65f1c2bc309727\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-7201aa65f1c2bc309727\">{\"x\":{\"crosstalkOptions\":{\"key\":[\"John\",\"Mark\",\"Mark\",\"Mark\",\"Mark\"],\"group\":\"Choose owner\"},\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\"],[\"John\",\"Mark\",\"Mark\",\"Mark\",\"Mark\"],[250,120,250,100,110],[\"bmw\",\"bmw\",\"bmw\",\"benz\",\"benz\"],[\"car1\",\"car2\",\"car3\",\"car4\",\"car5\"]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>owner<\\/th>\\n      <th>hp<\\/th>\\n      <th>car<\\/th>\\n      <th>id<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":2},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"owner\",\"targets\":1},{\"name\":\"hp\",\"targets\":2},{\"name\":\"car\",\"targets\":3},{\"name\":\"id\",\"targets\":4}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n### Dataframe 2\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDT::datatable(shared_df2)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-2228c657ae48d04a74dc\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2228c657ae48d04a74dc\">{\"x\":{\"crosstalkOptions\":{\"key\":[\"John\",\"John\",\"Mark\",\"Mark\"],\"group\":\"Choose owner\"},\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\"],[\"benz\",\"bmw\",\"benz\",\"bmw\"],[\"John\",\"John\",\"Mark\",\"Mark\"],[0,1,2,2]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>car<\\/th>\\n      <th>owner<\\/th>\\n      <th>freq<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":3},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"car\",\"targets\":1},{\"name\":\"owner\",\"targets\":2},{\"name\":\"freq\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false},\"selection\":{\"mode\":\"multiple\",\"selected\":null,\"target\":\"row\",\"selectable\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/selectize-0.12.4/css/selectize.bootstrap3.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/selectize-0.12.4/js/selectize.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"site_libs/plotly-binding-4.10.4/plotly.js\"></script>\n<script src=\"site_libs/typedarray-0.1/typedarray.min.js\"></script>\n<link href=\"site_libs/plotly-htmlwidgets-css-2.11.1/plotly-htmlwidgets.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/plotly-main-2.11.1/plotly-latest.min.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.31/datatables.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}